{"version":3,"sources":["modules/track/components/Track/Track.module.scss","modules/track/components/TrackInfo/TrackInfo.module.scss","modules/track/containers/TracksContainer/TracksContainer.module.scss","modules/shared/components/TextButton/TextButton.module.scss","modules/shared/components/RadioCluster/RadioCluster.module.scss","modules/track/components/Search/Search.module.scss","modules/track/Lyrics/Lyrics.module.scss","modules/shared/components/IconButton/IconButton.module.scss","modules/main/components/NavBar/NavBar.module.scss","modules/track/containers/LyricsContainer/LyricsContainer.module.scss","modules/track/components/TrackSkeletonScreen/TrackSkeletonScreen.module.scss","modules/shared/components/Textbox/Textbox.module.scss","modules/main/components/NavBar/NavBar.js","context.js","modules/track/Lyrics/Lyrics.js","modules/track/components/TrackInfo/TrackInfo.js","modules/track/containers/LyricsContainer/LyricsContainer.js","modules/track/components/TrackSkeletonScreen/TrackSkeletonScreen.js","modules/shared/components/TextButton/TextButton.js","modules/track/components/Track/Track.js","modules/shared/components/Textbox/Textbox.js","modules/shared/components/RadioCluster/RadioCluster.js","modules/shared/components/IconButton/IconButton.js","modules/track/components/Search/Search.js","modules/track/containers/TracksContainer/TracksContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","useHistory","className","to","style","textDecoration","styles","logo","Context","React","createContext","reducer","state","action","type","trackList","payload","tracksHeading","Consumer","Provider","dispatch","setState","baseUrl","apiKey","process","getTopTrackList","console","log","axios","get","this","then","result","data","message","body","track_list","catch","error","value","props","children","Component","Lyrics","properties","wrapper","lyrics","lyrics_body","TrackInfo","icon","track","track_name","album_name","artist_name","LyricsContainer","useState","setTrack","setLyrics","apiKeyUrl","trackIdUrl","match","params","id","useEffect","response","heading","TrackSkeletonScreen","box","TextButton","button","undefined","altStyling","submit","onClick","handleButtonClick","buttonName","Track","property","handleLyricsButtonClick","track_id","Textbox","textbox","name","placeholder","onChange","event","handleChange","target","RadioCluster","toggledButton","setToggledButton","emitButtonClick","buttonList","map","IconButton","iconClasses","Search","trackSearchTerm","setTrackSearchTerm","searchBy","setSearchBy","handleSearchButtonClick","preventDefault","SearchByTrackName","SearchByTrackLyric","onSubmit","TracksContainer","pageConfigURL","useContext","routeHistory","getTrackByName","trackName","getTrackByLyric","trackLyrics","setTrackList","_trackList","setTracksHeading","_tracksHeading","navigateToLyrics","trackId","push","_trackLyrics","_error","_trackName","length","Array","fill","item","key","App","basename","Fragment","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2c89760a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Track_wrapper__3OgtH\",\"icon\":\"Track_icon__15Awx\",\"property\":\"Track_property__3tKOr\",\"song-name\":\"Track_song-name__2_JBJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"TrackInfo_wrapper__2ctN8\",\"icon\":\"TrackInfo_icon__2oCXo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tracks-heading\":\"TracksContainer_tracks-heading__iRru0\",\"tracks-container\":\"TracksContainer_tracks-container__NGb9M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"TextButton_button__1oDrZ\",\"button--primary\":\"TextButton_button--primary__1h9tu\",\"button--alt\":\"TextButton_button--alt__1dkHJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"RadioCluster_button__3fEZ2\",\"button--toggled\":\"RadioCluster_button--toggled__5vln4\",\"button--untoggled\":\"RadioCluster_button--untoggled__GTkeQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-wrapper\":\"Search_main-wrapper__cxi1v\",\"controls-wrapper\":\"Search_controls-wrapper__TlH1I\",\"radio-label\":\"Search_radio-label__2yT40\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Lyrics_wrapper__3xvpc\",\"lyrics\":\"Lyrics_lyrics__3JYvO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"IconButton_icon__JH-vx\",\"button\":\"IconButton_button__3WW_T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"NavBar_logo__2u7Kp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"LyricsContainer_heading__10O09\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background-shimmer\":\"TrackSkeletonScreen_background-shimmer__1fUF-\",\"box\":\"TrackSkeletonScreen_box__2xefz\",\"shimmer\":\"TrackSkeletonScreen_shimmer__15z-b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textbox\":\"Textbox_textbox__1Lhqi\"};","import React from 'react';\r\nimport styles from './NavBar.module.scss';\r\nimport {useHistory, Link} from 'react-router-dom';\r\nexport const NavBar = () => {\r\n    const routeHistory = useHistory();\r\n    return (\r\n        <nav className=\"flex-container-row-start\">\r\n           <Link to='/' style={{ textDecoration: 'none'}}><span className={styles.logo}>SongHunter</span></Link>\r\n        </nav>\r\n    )\r\n}\r\n\r\n","import React, { Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const Context = React.createContext();\r\n\r\nconst reducer = (state, action)=>{\r\n    switch(action.type){\r\n        case 'SET_TRACK_LIST':{\r\n            return {\r\n                ...state,\r\n                trackList: action.payload\r\n            }\r\n        }\r\n        case 'SET_TRACKS_HEADING':{\r\n            return {\r\n                ...state,\r\n                tracksHeading: action.payload\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\nexport class Provider extends Component {\r\n    state = {\r\n        trackList: [],\r\n        tracksHeading:\"Top 10 Tracks\",\r\n        dispatch: action => this.setState(state=>reducer(state, action))\r\n    }\r\n    baseUrl = \"https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1\"\r\n    apiKey = `&apikey=${process.env.REACT_APP_MM_KEY}`\r\n    getTopTrackList = () =>{\r\n        console.log(`${this.baseUrl}/chart.tracks.get?chart_name=top&page=1&page_size=10&country=us&f_has_lyrics=1${this.apiKey}`)\r\n        return axios.get(`${this.baseUrl}/chart.tracks.get?chart_name=top&page=1&page_size=10&country=us&f_has_lyrics=1${this.apiKey}`)\r\n    }\r\n    componentDidMount(){\r\n        this.getTopTrackList().then((result)=>{\r\n            this.setState({trackList: result.data.message.body.track_list})\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error);\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <Context.Provider value = {this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport styles from './Lyrics.module.scss';\r\nexport const Lyrics = (properties) => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <p className={styles.lyrics}>{properties.lyrics.lyrics_body}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport styles from './TrackInfo.module.scss';\r\nexport const TrackInfo = (properties) => {\r\n    return (\r\n        <div className={`${styles.wrapper} flex-container-row-start`}>\r\n            <span><i className={`${styles.icon} fas fa-music`}></i>{properties.track.track_name}</span>\r\n            <span><i className={`${styles.icon} fas fa-record-vinyl`}></i>{properties.track.album_name}</span>\r\n            <span><i className={`${styles.icon} fas fa-user`}></i>{properties.track.artist_name}</span>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Lyrics } from '../../Lyrics/Lyrics';\r\nimport {TrackInfo} from '../../components/TrackInfo/TrackInfo';\r\nimport styles from './LyricsContainer.module.scss';\r\n\r\nexport const LyricsContainer = (properties) => {\r\n    const [track, setTrack] = useState({});\r\n    const [lyrics, setLyrics] = useState({});\r\n    const baseUrl = \"https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/\"\r\n    const apiKeyUrl = `&apikey=${process.env.REACT_APP_MM_KEY}`\r\n    const trackIdUrl = `?track_id=${properties.match.params.id}${apiKeyUrl}`\r\n    const getTrackLyrics = () =>{\r\n        return axios.get(`${baseUrl}track.lyrics.get${trackIdUrl}`)\r\n    }\r\n    const getTrackInfo = () =>{\r\n        return axios.get(`${baseUrl}track.get${trackIdUrl}`)\r\n    }\r\n    useEffect(()=>{\r\n        getTrackLyrics().then((response)=>{\r\n            console.log(response.data.message.body.lyrics)\r\n            setLyrics(response.data.message.body.lyrics);\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error);\r\n        })\r\n        getTrackInfo().then((response)=>{\r\n            setTrack(response.data.message.body.track)\r\n        })\r\n    }, [])\r\n    return ( \r\n        <main>\r\n        <TrackInfo track={track} />\r\n        <h2 className={styles.heading}>Lyrics</h2>\r\n        <Lyrics lyrics={lyrics}/>\r\n        </main>\r\n        )\r\n}\r\n","import React from 'react';\r\nimport styles from './TrackSkeletonScreen.module.scss';\r\nexport const TrackSkeletonScreen = () => {\r\n    return (\r\n        <div className={`${styles.box} background-shimmer`}>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport styles from './TextButton.module.scss';\r\nexport const TextButton = (properties) => {\r\n    return (\r\n    <button\r\n    className={`${styles.button} ${(properties.altStyling !== undefined ? styles['button--alt'] : styles['button--primary'])}`} \r\n    type={(properties.submit !== undefined ? \"submit\" : \"button\")}\r\n    onClick={properties.handleButtonClick}\r\n    >{properties.buttonName}</button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {TextButton} from '../../../shared/components/TextButton/TextButton';\r\nimport styles from './Track.module.scss';\r\nexport const Track = (properties) => {\r\n    const {track} = properties;\r\n    return (\r\n        <div className={styles['wrapper']}>\r\n            <div>\r\n                <div className={styles['song-name']}>{track.track_name}</div>\r\n                <div className={styles.property}><i className={`${styles.icon} fas fa-record-vinyl`}></i>{track.album_name}</div>\r\n                <div className={styles.property}><i className={`${styles.icon} fas fa-user`}></i>{track.artist_name}</div>\r\n            </div>\r\n            <TextButton \r\n            buttonName={'View Lyrics'}\r\n            altStyling={true}\r\n            handleButtonClick={()=>properties.handleLyricsButtonClick(track.track_id)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport styles from './Textbox.module.scss'\r\nexport const Textbox = (properties) => {\r\n    return (\r\n        <input className={styles.textbox} type=\"text\" \r\n        name={properties.name} \r\n        placeholder={properties.placeholder}\r\n        value={properties.value} \r\n        onChange={event=>{properties.handleChange(event.target.value)}}\r\n        />\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport styles from './RadioCluster.module.scss'\r\nexport const RadioCluster = (properties) => {\r\n    const [toggledButton, setToggledButton] = useState('Name');\r\n    useEffect(() => {\r\n      emitButtonClick(toggledButton)  \r\n    }, [toggledButton])\r\n    const emitButtonClick= (buttonName) => {\r\n        properties.handleButtonClick(buttonName);\r\n    }\r\n    \r\n    return (\r\n        <div className=\"flex-container-row-center\">\r\n            {properties.buttonList.map(buttonName => (\r\n                            <button \r\n                            onClick={()=>setToggledButton(buttonName)} \r\n                            className={`${(toggledButton === buttonName ? styles['button--toggled']: styles['button--untoggled'])} ${styles.button}`}\r\n                            >\r\n                            {buttonName}\r\n                            </button>\r\n                        ))}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport styles from './IconButton.module.scss';\r\nexport const IconButton = (properties) => {\r\n    return (\r\n        <button \r\n        className={styles.button} \r\n        type={(properties.submit !== undefined ? 'submit' : 'button')} \r\n        onClick={()=>properties.handleButtonClick}>\r\n            <i className={`${properties.iconClasses} ${styles.icon}`}></i>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Consumer } from '../../../../context';\r\nimport { Textbox } from '../../../shared/components/Textbox/Textbox';\r\nimport { RadioCluster } from '../../../shared/components/RadioCluster/RadioCluster';\r\nimport { IconButton } from '../../../shared/components/IconButton/IconButton';\r\nimport styles from './Search.module.scss';\r\nexport const Search = (properties) => {\r\n    const [trackSearchTerm, setTrackSearchTerm] = useState('');\r\n    const [searchBy, setSearchBy] = useState('Name');\r\n    const handleSearchButtonClick = (event) => {\r\n        event.preventDefault();\r\n        if(searchBy === \"Name\"){\r\n            properties.SearchByTrackName(trackSearchTerm)\r\n        }\r\n        else{\r\n            properties.SearchByTrackLyric(trackSearchTerm)\r\n        }\r\n    }\r\n    return (\r\n        <Consumer>\r\n            {value=>{ \r\n                return(\r\n                <form className={styles['main-wrapper']} onSubmit={handleSearchButtonClick}>\r\n                    <div className={styles['controls-wrapper']}>\r\n                        <Textbox name={trackSearchTerm} placeholder={`Song ${searchBy}...`} value={trackSearchTerm} handleChange={setTrackSearchTerm}/>\r\n                        <IconButton iconClasses=\"fas fa-search\" submit=\"submit\"/>\r\n                    </div>\r\n                    <div className=\"flex-container-row-center\">\r\n                        <span className={styles['radio-label']}>Search by: </span>\r\n                        <RadioCluster handleButtonClick={setSearchBy} buttonList={['Name', 'Lyric']}/>\r\n                    </div>\r\n                </form>\r\n                )\r\n            }}\r\n        </Consumer>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport {Consumer} from '../../../../context';\r\nimport {TrackSkeletonScreen} from '../../components/TrackSkeletonScreen/TrackSkeletonScreen.js';\r\nimport {Track} from '../../components/Track/Track.js';\r\nimport {Search} from '../../components/Search/Search';\r\nimport axios from 'axios';\r\nimport {Context} from '../../../../context';\r\nimport styles from './TracksContainer.module.scss';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nexport const TracksContainer = () => {\r\n    const baseUrl = \"https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.search?\";\r\n    const pageConfigURL = \"&page_size=10&page=1&s_track_rating=desc\";\r\n    const apiKeyUrl = `&apikey=${process.env.REACT_APP_MM_KEY}`;\r\n    const {dispatch} = useContext(Context)\r\n    const routeHistory = useHistory();\r\n    const handleSearchByTrackName = (_trackName) => {\r\n        getTrackByName(_trackName)\r\n        .then(result=>{\r\n            console.log(result.data)\r\n            setTrackList(result.data.message.body.track_list);\r\n            setTracksHeading('Search Results');\r\n        })\r\n        .catch(_error=>{\r\n            console.log(_error);\r\n        })\r\n    }\r\n    const handleSearchByTrackLyric = (_trackLyrics) => {\r\n        getTrackByLyric(_trackLyrics).then(result=>{\r\n            setTrackList(result.data.message.body.track_list)\r\n            setTracksHeading('Search Results');\r\n        })\r\n        .catch(_error=>{\r\n            console.log(_error)\r\n        })\r\n    }\r\n    const getTrackByName = (trackName) =>{\r\n        console.log(`${baseUrl}q_track=${trackName}${pageConfigURL}${apiKeyUrl}`)\r\n        return axios.get(`${baseUrl}q_track=${trackName}${pageConfigURL}${apiKeyUrl}`)\r\n    }\r\n    const getTrackByLyric = (trackLyrics) =>{\r\n        return axios.get(`${baseUrl}q_lyrics=${trackLyrics}${pageConfigURL}${apiKeyUrl}`)\r\n    }\r\n    const setTrackList = (_trackList) =>{\r\n        dispatch({\r\n            type: 'SET_TRACK_LIST',\r\n            payload: _trackList\r\n        });\r\n    }\r\n    const setTracksHeading = (_tracksHeading) => {\r\n        dispatch({\r\n            type: 'SET_TRACKS_HEADING',\r\n            payload: _tracksHeading\r\n        })\r\n    }\r\n    const navigateToLyrics = (trackId) =>{\r\n        routeHistory.push(`lyrics/track/${trackId}`)\r\n    }\r\n    return (\r\n        <main>\r\n            <Search SearchByTrackLyric={handleSearchByTrackLyric} SearchByTrackName={handleSearchByTrackName}/>\r\n        <Consumer>\r\n                {value => {\r\n                 const {trackList, tracksHeading} = value;\r\n                    \r\n                 if(trackList === undefined || trackList.length === 0){\r\n                    return (\r\n                    <>\r\n                    <h3 className={styles['tracks-heading']}>{tracksHeading}</h3>\r\n                    <div className={styles['tracks-container']}>\r\n                        {Array(10).fill(null).map(item => (\r\n                            <TrackSkeletonScreen/>\r\n                        ))\r\n                        }\r\n                    </div>\r\n                    </>\r\n                    );\r\n                 }\r\n                 else{\r\n                    return (\r\n                    <>\r\n                    <h3 className={styles['tracks-heading']}>{tracksHeading}</h3>\r\n                    <div className={styles['tracks-container']}>\r\n                        {trackList.map(item => (\r\n                            <Track handleLyricsButtonClick={navigateToLyrics} key={item.track.track_id} track={item.track} />\r\n                        ))}\r\n                    </div>\r\n                    </>\r\n                    )\r\n                 }\r\n                }}\r\n        </Consumer>\r\n        </main>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport {NavBar} from './modules/main/components/NavBar/NavBar.js';\r\nimport {Provider} from './context.js';\r\nimport {LyricsContainer} from './modules/track/containers/LyricsContainer/LyricsContainer';\r\nimport { TracksContainer } from './modules/track/containers/TracksContainer/TracksContainer';\r\n\r\nexport const App = () => {\r\n  return (\r\n    <Provider>\r\n    <Router basename={'/React_SongHunter'}>\r\n    <React.Fragment>\r\n      <NavBar/>\r\n      <div id=\"router-wrapper\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={TracksContainer}/>\r\n          <Route path=\"/lyrics/track/:id\" component={LyricsContainer}/>\r\n        </Switch>\r\n      </div>\r\n    </React.Fragment>\r\n    </Router>\r\n    </Provider>\r\n  )\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport { App }  from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}